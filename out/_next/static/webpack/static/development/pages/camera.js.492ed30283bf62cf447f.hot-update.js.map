{"version":3,"file":"static/webpack/static/development/pages/camera.js.492ed30283bf62cf447f.hot-update.js","sources":["webpack:///./components/progress-bar.js"],"sourcesContent":["import { Line, Circle } from \"rc-progress\";\nimport { Howl } from \"howler\";\nimport dayjs from \"dayjs\";\nimport isNull from \"lodash/isNull\";\nimport debounce from \"lodash/debounce\";\n\nlet playSound = () => {\n  const howl = new Howl({ src: [\"../static/sound/camera_shutter.mp3\"] });\n  howl.play();\n};\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      percent: 0,\n      blocking: false,\n      lastTimeFaceShown: null\n    };\n    this.topUpDebounced = debounce(this.topUp, 200, {\n      leading: true,\n      maxWait: 200\n    });\n  }\n  componentDidMount() {\n    setInterval(this.decrease, 200);\n    // setInterval(this.topUp, 100);\n  }\n\n  topUp = async () => {\n    console.log(\"inside topup\");\n    if (\n      isNull(this.state.lastTimeFaceShown) ||\n      dayjs().isAfter(this.state.lastTimeFaceShown.add(10, \"second\"))\n    ) {\n      console.log(1);\n      await this.setState({\n        lastTimeFaceShown: dayjs().subtract(10, \"second\")\n      });\n      // return;\n    }\n    console.log(\"lasttime\", this.state.lastTimeFaceShown);\n    console.log(\"now\", dayjs());\n    if (dayjs().isBefore(this.state.lastTimeFaceShown.add(0.5, \"second\"))) {\n      console.log(2);\n      return;\n    }\n    console.log(3);\n    if (this.state.blocking || !this.props.isActive()) {\n      return;\n    }\n    const percent = this.state.percent + 10;\n    if (percent >= 100) {\n      this.props.addToPunchList();\n      playSound();\n      this.block();\n      this.restart();\n      return;\n    }\n    this.setState({ percent });\n  };\n\n  decrease = async () => {\n    if (\n      !isNull(this.state.lastTimeFaceShown) &&\n      dayjs().isBefore(this.state.lastTimeFaceShown.add(10, \"second\"))\n    ) {\n      return;\n    }\n    if (this.state.blocking) {\n      return;\n    }\n    const percent = this.state.percent - 1;\n    if (percent <= 0) {\n      return;\n    }\n    await this.setState({ percent });\n  };\n\n  block = () => {\n    this.setState({ blocking: true });\n  };\n  unblock = () => {\n    this.setState({ blocking: false });\n  };\n  restart = () => {\n    this.setState({ percent: 100 });\n    setTimeout(() => {\n      this.setState({ percent: 0 });\n      this.unblock();\n    }, 10 * 1000);\n  };\n\n  render() {\n    return <Line strokeWidth=\"4\" percent={this.state.percent} />;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAKA;AANA;AAAA;AAQA;AADA;AACA;AARA;AAYA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AAcA;AAfA;AACA;AADA;AAkBA;AACA;AAnBA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAsBA;AACA;AAvBA;AAAA;AAAA;AAAA;AACA;AAuBA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AA5BA;AACA;AADA;AA8BA;AAAA;AAAA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAkDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAcA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAnDA;AAoEA;AAAA;AAAA;AACA;AACA;AAtEA;AAuEA;AAAA;AAAA;AACA;AACA;AAzEA;AA0EA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AA9EA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAPA;AAWA;AACA;;;AAAA;AACA;AAEA;;;AAkEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AApFA;AACA;;;;;A","sourceRoot":""}