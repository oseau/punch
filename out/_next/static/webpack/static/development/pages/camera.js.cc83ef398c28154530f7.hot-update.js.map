{"version":3,"file":"static/webpack/static/development/pages/camera.js.cc83ef398c28154530f7.hot-update.js","sources":["webpack:///./components/progress-bar.js"],"sourcesContent":["import { Line, Circle } from \"rc-progress\";\nimport { Howl } from \"howler\";\nimport dayjs from \"dayjs\";\nimport isNull from \"lodash/isNull\";\nimport debounce from \"lodash/debounce\";\n\nlet playSound = () => {\n  const howl = new Howl({ src: [\"../static/sound/camera_shutter.mp3\"] });\n  howl.play();\n};\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      percent: 0,\n      blocking: false,\n      lastTimeFaceShown: null\n    };\n    this.topUpDebounced = debounce(this.topUp, 100);\n  }\n  componentDidMount() {\n    // setInterval(this.decrease, 1000);\n    // setInterval(this.topUp, 100);\n  }\n\n  topUp = () => {\n    if (\n      isNull(this.state.lastTimeFaceShown) ||\n      dayjs().isAfter(this.state.lastTimeFaceShown.add(10, \"second\"))\n    ) {\n      this.setState({ lastTimeFaceShown: dayjs() });\n      return;\n    }\n    if (dayjs().isBefore(this.state.lastTimeFaceShown.add(0.5, \"second\"))) {\n      return;\n    }\n    if (this.state.blocking || !this.props.isActive()) {\n      return;\n    }\n    console.log(\"inside topup\", Date.now());\n    const percent = this.state.percent + 10;\n    if (percent >= 100) {\n      this.props.addToPunchList();\n      playSound();\n      this.block();\n      this.restart();\n      return;\n    }\n    this.setState({ percent });\n  };\n\n  decrease = () => {\n    if (\n      !isNull(this.state.lastTimeFaceShown) &&\n      dayjs().isBefore(this.state.lastTimeFaceShown.add(10, \"second\"))\n    ) {\n      return;\n    }\n    if (this.state.blocking) {\n      return;\n    }\n    const percent = this.state.percent - 1;\n    if (percent <= 0) {\n      return;\n    }\n    this.setState({ percent });\n  };\n\n  block = () => {\n    this.setState({ blocking: true });\n  };\n  unblock = () => {\n    this.setState({ blocking: false });\n  };\n  restart = () => {\n    this.setState({ percent: 100 });\n    setTimeout(() => {\n      this.setState({ percent: 0 });\n      this.unblock();\n    }, 10 * 1000);\n  };\n\n  render() {\n    return <Line strokeWidth=\"4\" percent={this.state.percent} />;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAeA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAvCA;AAyCA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAxDA;AA0DA;AAAA;AAAA;AACA;AACA;AA5DA;AA6DA;AAAA;AAAA;AACA;AACA;AA/DA;AAgEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AApEA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAQA;AACA;;;AAAA;AAEA;AACA;;;AA2DA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AA1EA;AACA;;;;;A","sourceRoot":""}